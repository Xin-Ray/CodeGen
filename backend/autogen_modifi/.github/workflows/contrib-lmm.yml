# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ContribTests

on:
  pull_request:
    branches: ['main', 'dev/v0.2']
    paths:
      - 'autogen/img_utils.py'
      - 'autogen/agentchat/contrib/multimodal_conversable_agent.py'
      - 'autogen/agentchat/contrib/llava_agent.py'
      - 'test/test_img_utils.py'
      - 'test/agentchat/contrib/test_lmm.py'
      - 'test/agentchat/contrib/test_llava.py'
      - '.github/workflows/lmm-test.yml'
      - 'setup.py'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  LMMTest:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages and dependencies for all tests
        run: |
          python -m pip install --upgrade pip wheel
          pip install pytest
      - name: Install packages and dependencies for LMM
        run: |
          pip install -e .[lmm]
          pip uninstall -y openai
      - name: Test LMM and LLaVA
        run: |
          pytest test/test_img_utils.py test/agentchat/contrib/test_lmm.py test/agentchat/contrib/test_llava.py
      - name: Coverage
        if: matrix.python-version == '3.10'
        run: |
          pip install coverage>=5.3
          coverage run -a -m pytest test/test_img_utils.py test/agentchat/contrib/test_lmm.py test/agentchat/contrib/test_llava.py
          coverage xml
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.10'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
